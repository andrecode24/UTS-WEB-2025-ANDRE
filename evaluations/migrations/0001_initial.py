# Generated by Django 5.2.7 on 2025-10-03 09:08

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('internships', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evaluation_type', models.CharField(choices=[('UTS', 'Ujian Tengah Semester'), ('UAS', 'Ujian Akhir Semester')], max_length=3)),
                ('period_month', models.IntegerField(help_text='Bulan ke berapa evaluasi ini (2 untuk UTS, terakhir untuk UAS)')),
                ('accuracy', models.IntegerField(blank=True, help_text='Keakuratan dan ketelitian', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('neatness', models.IntegerField(blank=True, help_text='Kerapihan hasil kerja', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('task_completion', models.IntegerField(blank=True, help_text='Kemampuan menyelesaikan tugas', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('creativity', models.IntegerField(blank=True, help_text='Kreativitas dan inovasi', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('work_quantity', models.IntegerField(blank=True, help_text='Jumlah pekerjaan diselesaikan', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('work_speed', models.IntegerField(blank=True, help_text='Kecepatan menyelesaikan tugas', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('consistency', models.IntegerField(blank=True, help_text='Konsistensi produktivitas', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('task_understanding', models.IntegerField(blank=True, help_text='Pemahaman tugas', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('technical_skills', models.IntegerField(blank=True, help_text='Penguasaan technical skills', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('theory_application', models.IntegerField(blank=True, help_text='Aplikasi teori ke praktik', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('learning_willingness', models.IntegerField(blank=True, help_text='Kemauan belajar', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('punctuality', models.IntegerField(blank=True, help_text='Ketepatan waktu hadir', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('rule_compliance', models.IntegerField(blank=True, help_text='Kepatuhan peraturan', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('responsibility', models.IntegerField(blank=True, help_text='Tanggung jawab', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('teamwork', models.IntegerField(blank=True, help_text='Kemampuan kerja tim', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('discussion_contribution', models.IntegerField(blank=True, help_text='Kontribusi dalam diskusi', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('respect_opinions', models.IntegerField(blank=True, help_text='Menghargai pendapat orang', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('verbal_communication', models.IntegerField(blank=True, help_text='Komunikasi verbal', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('written_communication', models.IntegerField(blank=True, help_text='Komunikasi tertulis', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('presentation_skills', models.IntegerField(blank=True, help_text='Kemampuan presentasi', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('appearance', models.IntegerField(blank=True, help_text='Penampilan', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('ethics', models.IntegerField(blank=True, help_text='Etika dan sopan santun', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('accept_criticism', models.IntegerField(blank=True, help_text='Menerima kritik', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('achievements_description', models.TextField(blank=True, help_text='Pencapaian selama magang')),
                ('strengths', models.TextField(blank=True, help_text='Kekuatan mahasiswa')),
                ('improvements_needed', models.TextField(blank=True, help_text='Area yang perlu diperbaiki')),
                ('career_recommendation', models.TextField(blank=True, help_text='Rekomendasi karir')),
                ('overall_rating', models.DecimalField(blank=True, decimal_places=2, help_text='Overall rating (auto-calculated)', max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(5.0)])),
                ('pass_recommendation', models.BooleanField(default=False, help_text='Rekomendasi kelulusan')),
                ('rehire_willingness', models.BooleanField(default=False, help_text='Bersedia terima mahasiswa lagi?')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('DRAFT', 'Draft'), ('SUBMITTED', 'Submitted')], default='PENDING', max_length=20)),
                ('deadline', models.DateField()),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('placement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to='internships.internshipplacement')),
                ('supervisor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to='accounts.supervisorprofile')),
            ],
            options={
                'verbose_name': 'Evaluation',
                'verbose_name_plural': 'Evaluations',
                'ordering': ['-created_at'],
                'unique_together': {('placement', 'evaluation_type')},
            },
        ),
        migrations.CreateModel(
            name='EvaluationReminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('days_before_deadline', models.IntegerField()),
                ('evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to='evaluations.evaluation')),
            ],
            options={
                'ordering': ['-sent_at'],
            },
        ),
    ]
