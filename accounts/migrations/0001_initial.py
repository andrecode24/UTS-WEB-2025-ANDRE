# Generated by Django 5.2.7 on 2025-10-03 09:08

import accounts.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('role', models.CharField(choices=[('STUDENT', 'Student'), ('SUPERVISOR', 'Supervisor'), ('ADMIN', 'Admin')], max_length=20)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('force_password_change', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AdminProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='adminprofile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Admin Profile',
                'verbose_name_plural': 'Admin Profiles',
            },
        ),
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255)),
                ('nim', models.CharField(max_length=8, unique=True, validators=[django.core.validators.RegexValidator('^\\d{8}$', 'NIM must be exactly 8 digits')])),
                ('program', models.CharField(choices=[('MN', 'S1 Manajemen'), ('BP', 'S1 Bisnis Pariwisata'), ('AK', 'S1 Akuntansi'), ('EB', 'S1 Ekonomi Bisnis'), ('CSE', 'S1 Computer Systems Engineering'), ('FBT', 'S1 Food Business Technology'), ('PDI', 'S1 Product Design Innovation'), ('DBT', 'S1 Digital Business Technology'), ('BM', 'S1 Business Mathematics'), ('EBT', 'S1 Energy Business Technology'), ('HBI', 'S1 Hukum Bisnis Internasional')], max_length=10)),
                ('angkatan', models.CharField(max_length=4)),
                ('gender', models.CharField(choices=[('L', 'Laki-laki'), ('P', 'Perempuan')], max_length=1)),
                ('whatsapp', models.CharField(max_length=20)),
                ('konsultasi_mentor_doc', models.FileField(help_text='Bukti konsultasi dengan mentor (PDF, max 5MB)', upload_to='student_docs/konsultasi/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf']), accounts.models.validate_file_size])),
                ('sptjm_doc', models.FileField(help_text='SPTJM - Surat Pernyataan Tanggung Jawab Mutlak (PDF, max 5MB)', upload_to='student_docs/sptjm/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf']), accounts.models.validate_file_size])),
                ('cv', models.FileField(blank=True, upload_to='student_docs/cv/')),
                ('portfolio', models.FileField(blank=True, upload_to='student_docs/portfolio/')),
                ('ipk', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('skills', models.TextField(blank=True, help_text='Comma-separated skills')),
                ('linkedin_url', models.URLField(blank=True)),
                ('github_url', models.URLField(blank=True)),
                ('status', models.CharField(choices=[('APPROVED', 'Approved'), ('ACTIVE', 'Active (Has Internship)'), ('AT_RISK', 'At Risk (No Internship > 2 months)'), ('COMPLETED', 'Completed')], default='APPROVED', max_length=20)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='studentprofile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Student Profile',
                'verbose_name_plural': 'Student Profiles',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SupervisorProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255)),
                ('company_name', models.CharField(max_length=255)),
                ('position', models.CharField(max_length=255)),
                ('whatsapp', models.CharField(max_length=20)),
                ('is_first_login', models.BooleanField(default=True)),
                ('credentials_sent_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='supervisorprofile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Supervisor Profile',
                'verbose_name_plural': 'Supervisor Profiles',
                'ordering': ['-created_at'],
            },
        ),
    ]
